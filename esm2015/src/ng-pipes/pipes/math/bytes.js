import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
export class BytesPipe {
    constructor() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    transform(value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];
        const calc = value / (format.max / 1024);
        const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return `${num} ${format.type}`;
    }
}
BytesPipe.decorators = [
    { type: Pipe, args: [{ name: 'bytes' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbmctcGlwZXMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUdqRixNQUFNLE9BQU8sU0FBUztJQUR0QjtRQUVVLGVBQVUsR0FBeUM7WUFDekQsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7WUFDeEIsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDNUIsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDL0IsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7U0FDbEMsQ0FBQztJQWFKLENBQUM7SUFYQyxTQUFTLENBQUMsS0FBYSxFQUFFLFNBQThCO1FBQ3JELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUVELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZHLE1BQU0sSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFNUUsT0FBTyxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQzs7O1lBbkJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFwcGx5UHJlY2lzaW9uLCBpc051bWJlckZpbml0ZSwgaXNVbmRlZmluZWQgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xyXG5cclxuQFBpcGUoeyBuYW1lOiAnYnl0ZXMnIH0pXHJcbmV4cG9ydCBjbGFzcyBCeXRlc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBwcml2YXRlIGRpY3Rpb25hcnk6IEFycmF5PHsgbWF4OiBudW1iZXI7IHR5cGU6IHN0cmluZyB9PiA9IFtcclxuICAgIHsgbWF4OiAxMDI0LCB0eXBlOiAnQicgfSxcclxuICAgIHsgbWF4OiAxMDQ4NTc2LCB0eXBlOiAnS0InIH0sXHJcbiAgICB7IG1heDogMTA3Mzc0MTgyNCwgdHlwZTogJ01CJyB9LFxyXG4gICAgeyBtYXg6IDEuMDk5NTExNmUxMiwgdHlwZTogJ0dCJyB9LFxyXG4gIF07XHJcblxyXG4gIHRyYW5zZm9ybSh2YWx1ZTogbnVtYmVyLCBwcmVjaXNpb24/OiBudW1iZXIgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCBudW1iZXIge1xyXG4gICAgaWYgKCFpc051bWJlckZpbml0ZSh2YWx1ZSkpIHtcclxuICAgICAgcmV0dXJuIE5hTjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBmb3JtYXQgPSB0aGlzLmRpY3Rpb25hcnkuZmluZChkID0+IHZhbHVlIDwgZC5tYXgpIHx8IHRoaXMuZGljdGlvbmFyeVt0aGlzLmRpY3Rpb25hcnkubGVuZ3RoIC0gMV07XHJcbiAgICBjb25zdCBjYWxjID0gdmFsdWUgLyAoZm9ybWF0Lm1heCAvIDEwMjQpO1xyXG4gICAgY29uc3QgbnVtID0gaXNVbmRlZmluZWQocHJlY2lzaW9uKSA/IGNhbGMgOiBhcHBseVByZWNpc2lvbihjYWxjLCBwcmVjaXNpb24pO1xyXG5cclxuICAgIHJldHVybiBgJHtudW19ICR7Zm9ybWF0LnR5cGV9YDtcclxuICB9XHJcbn1cclxuIl19
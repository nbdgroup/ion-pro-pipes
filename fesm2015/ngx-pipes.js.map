{"version":3,"file":"ngx-pipes.js","sources":["../../src/ng-pipes/pipes/array/diff.ts","../../src/ng-pipes/pipes/array/initial.ts","../../src/ng-pipes/pipes/array/flatten.ts","../../src/ng-pipes/pipes/array/intersection.ts","../../src/ng-pipes/pipes/helpers/helpers.ts","../../src/ng-pipes/pipes/array/reverse.ts","../../src/ng-pipes/pipes/array/tail.ts","../../src/ng-pipes/pipes/array/truthify.ts","../../src/ng-pipes/pipes/array/union.ts","../../src/ng-pipes/pipes/array/unique.ts","../../src/ng-pipes/pipes/array/without.ts","../../src/ng-pipes/pipes/array/pluck.ts","../../src/ng-pipes/pipes/array/shuffle.ts","../../src/ng-pipes/pipes/array/every.ts","../../src/ng-pipes/pipes/array/some.ts","../../src/ng-pipes/pipes/array/sample.ts","../../src/ng-pipes/pipes/array/group-by.ts","../../src/ng-pipes/pipes/array/filter-by.ts","../../src/ng-pipes/pipes/array/order-by.ts","../../src/ng-pipes/pipes/array/group-by-impure.ts","../../src/ng-pipes/pipes/array/filter-by-impure.ts","../../src/ng-pipes/pipes/array/order-by-impure.ts","../../src/ng-pipes/pipes/array/range.ts","../../src/ng-pipes/pipes/array/chunk.ts","../../src/ng-pipes/pipes/array/from-pairs.ts","../../src/ng-pipes/pipes/array/index.ts","../../src/ng-pipes/pipes/object/keys.ts","../../src/ng-pipes/pipes/object/values.ts","../../src/ng-pipes/pipes/object/pairs.ts","../../src/ng-pipes/pipes/object/pick.ts","../../src/ng-pipes/pipes/object/omit.ts","../../src/ng-pipes/pipes/object/invert.ts","../../src/ng-pipes/pipes/object/invert-by.ts","../../src/ng-pipes/pipes/object/diff-obj.ts","../../src/ng-pipes/pipes/object/index.ts","../../src/ng-pipes/pipes/string/a-or-an.ts","../../src/ng-pipes/pipes/string/ucwords.ts","../../src/ng-pipes/pipes/string/ltrim.ts","../../src/ng-pipes/pipes/string/repeat.ts","../../src/ng-pipes/pipes/string/rtrim.ts","../../src/ng-pipes/pipes/string/scan.ts","../../src/ng-pipes/pipes/string/shorten.ts","../../src/ng-pipes/pipes/string/strip-tags.ts","../../src/ng-pipes/pipes/string/trim.ts","../../src/ng-pipes/pipes/string/ucfirst.ts","../../src/ng-pipes/pipes/string/slugify.ts","../../src/ng-pipes/pipes/string/camelize.ts","../../src/ng-pipes/pipes/string/latinise.ts","../../src/ng-pipes/pipes/string/lines.ts","../../src/ng-pipes/pipes/string/underscore.ts","../../src/ng-pipes/pipes/string/match.ts","../../src/ng-pipes/pipes/string/test.ts","../../src/ng-pipes/pipes/string/lpad.ts","../../src/ng-pipes/pipes/string/rpad.ts","../../src/ng-pipes/pipes/string/pluralize.ts","../../src/ng-pipes/pipes/string/wrap.ts","../../src/ng-pipes/pipes/string/index.ts","../../src/ng-pipes/pipes/math/max.ts","../../src/ng-pipes/pipes/math/min.ts","../../src/ng-pipes/pipes/math/percentage.ts","../../src/ng-pipes/pipes/math/sum.ts","../../src/ng-pipes/pipes/math/floor.ts","../../src/ng-pipes/pipes/math/round.ts","../../src/ng-pipes/pipes/math/sqrt.ts","../../src/ng-pipes/pipes/math/pow.ts","../../src/ng-pipes/pipes/math/ceil.ts","../../src/ng-pipes/pipes/math/degrees.ts","../../src/ng-pipes/pipes/math/bytes.ts","../../src/ng-pipes/pipes/math/radians.ts","../../src/ng-pipes/pipes/math/index.ts","../../src/ng-pipes/pipes/boolean/is-defined.ts","../../src/ng-pipes/pipes/boolean/is-null.ts","../../src/ng-pipes/pipes/boolean/is-undefined.ts","../../src/ng-pipes/pipes/boolean/is-string.ts","../../src/ng-pipes/pipes/boolean/is-function.ts","../../src/ng-pipes/pipes/boolean/is-number.ts","../../src/ng-pipes/pipes/boolean/is-array.ts","../../src/ng-pipes/pipes/boolean/is-object.ts","../../src/ng-pipes/pipes/boolean/is-greater-equal-than.ts","../../src/ng-pipes/pipes/boolean/is-greater-than.ts","../../src/ng-pipes/pipes/boolean/is-less-equal-than.ts","../../src/ng-pipes/pipes/boolean/is-equal-to.ts","../../src/ng-pipes/pipes/boolean/is-not-equal-to.ts","../../src/ng-pipes/pipes/boolean/is-identical-to.ts","../../src/ng-pipes/pipes/boolean/is-not-identical-to.ts","../../src/ng-pipes/pipes/boolean/is-less-than.ts","../../src/ng-pipes/pipes/boolean/index.ts","../../src/ng-pipes/pipes/date/time-ago.ts","../../src/ng-pipes/pipes/date/index.ts","../../src/ng-pipes/ng-pipes.module.ts","../../ngx-pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'diff' })\r\nexport class DiffPipe implements PipeTransform {\r\n  transform(input: any[], ...args: any[]): any[];\r\n  transform<T>(input: T, ...args: any[]): T;\r\n\r\n  transform(input: any, ...args: any[]): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    // tslint:disable-next-line no-bitwise\r\n    return args.reduce((d, c) => d.filter((e: any) => !~c.indexOf(e)), input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'initial' })\r\nexport class InitialPipe implements PipeTransform {\r\n  transform(input: any[], num: number): any[];\r\n  transform(input: any): any;\r\n\r\n  transform(input: any, num: number = 0): any[] {\r\n    return Array.isArray(input) ? input.slice(0, input.length - num) : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'flatten' })\r\nexport class FlattenPipe implements PipeTransform {\r\n  transform(input: any[], shallow?: boolean): any[];\r\n  transform<T>(input: T, shallow?: boolean): T;\r\n\r\n  transform(input: any, shallow: boolean = false): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return shallow ? [].concat.apply([], input) : this.flatten(input);\r\n  }\r\n\r\n  private flatten(array: any[]): any[] {\r\n    return array.reduce((arr: any[], elm: any) => {\r\n      if (Array.isArray(elm)) {\r\n        return arr.concat(this.flatten(elm));\r\n      }\r\n\r\n      return arr.concat(elm);\r\n    }, []);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'intersection' })\r\nexport class IntersectionPipe implements PipeTransform {\r\n  transform(input: any[], ...args: any[]): any[];\r\n  transform<T>(input: T, ...args: any[]): T;\r\n\r\n  transform(input: any, ...args: any[]): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    // tslint:disable-next-line no-bitwise\r\n    return args.reduce((n, c) => n.filter((e: any) => !!~c.indexOf(e)), input);\r\n  }\r\n}\r\n","export function isUndefined(value: any) {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\nexport function isNull(value: any) {\r\n  return value === null;\r\n}\r\n\r\nexport function isFunction(value: any) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport function isNumber(value: any) {\r\n  return typeof value === 'number';\r\n}\r\n\r\nexport function isString(value: any) {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function isBoolean(value: any) {\r\n  return typeof value === 'boolean';\r\n}\r\n\r\nexport function isObject(value: any) {\r\n  return value !== null && typeof value === 'object';\r\n}\r\n\r\nexport function isNumberFinite(value: any) {\r\n  return isNumber(value) && isFinite(value);\r\n}\r\n\r\nexport function isVowel(letter: string): boolean {\r\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\r\n\r\n  return vowels.indexOf(letter) !== -1;\r\n}\r\n\r\nexport function ucFirst(text: string) {\r\n  const [part, ...split] = text.split(/\\s/g);\r\n\r\n  const ucd = part\r\n    .toLowerCase()\r\n    .split(/(?=['|-])/g)\r\n    .map(\r\n      (word: any) =>\r\n      word.indexOf('-') + word.indexOf(\"'\") > -2\r\n        ? word.slice(0, 2).toUpperCase() + word.slice(2)\r\n        : word.slice(0, 1).toUpperCase() + word.slice(1)\r\n    )\r\n    .join('');\r\n\r\n  return [ucd, ...split].join(' ');\r\n}\r\n\r\nexport function applyPrecision(num: number, precision: number) {\r\n  if (precision <= 0) {\r\n    return Math.round(num);\r\n  }\r\n\r\n  const tho = 10 ** precision;\r\n\r\n  return Math.round(num * tho) / tho;\r\n}\r\n\r\nexport function extractDeepPropertyByMapKey(obj: any, map: string): any {\r\n  const keys = map.split('.');\r\n  const head = keys.shift();\r\n\r\n  return keys.reduce((prop: any, key: string) => {\r\n    return !isUndefined(prop) && !isNull(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;\r\n  }, obj[head || '']);\r\n}\r\n\r\nexport function extractDeepPropertyByParentMapKey(obj: any, map: string): any {\r\n  const keys = map.split('.');\r\n  const tail = keys.pop();\r\n  const props = extractDeepPropertyByMapKey(obj, keys.join('.'));\r\n\r\n  return { props, tail };\r\n}\r\n\r\nexport function getKeysTwoObjects(obj: any, other: any): any {\r\n  return [...Object.keys(obj), ...Object.keys(other)].filter((key, index, array) => array.indexOf(key) === index);\r\n}\r\n\r\nexport function isDeepEqual(obj: any, other: any): any {\r\n  if (!isObject(obj) || !isObject(other)) {\r\n    return obj === other;\r\n  }\r\n\r\n  return getKeysTwoObjects(obj, other).every(\r\n    (key: any): boolean => {\r\n      if (!isObject(obj[key]) && !isObject(other[key])) {\r\n        return obj[key] === other[key];\r\n      }\r\n      if (!isObject(obj[key]) || !isObject(other[key])) {\r\n        return false;\r\n      }\r\n\r\n      return isDeepEqual(obj[key], other[key]);\r\n    }\r\n  );\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'reverse' })\r\nexport class ReversePipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (isString(input)) {\r\n      return input\r\n        .split('')\r\n        .reverse()\r\n        .join('');\r\n    }\r\n\r\n    return Array.isArray(input) ? input.slice().reverse() : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'tail' })\r\nexport class TailPipe implements PipeTransform {\r\n  transform(input: any[], num?: number): any[];\r\n  transform<T>(input: T, num?: number): T;\r\n\r\n  transform(input: any, num: number = 0): any {\r\n    return Array.isArray(input) ? input.slice(num) : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'truthify' })\r\nexport class TrurthifyPipe implements PipeTransform {\r\n  transform(input: any[]): any[];\r\n  transform<T>(input: T): T;\r\n\r\n  transform(input: any): any {\r\n    return Array.isArray(input) ? input.filter(e => !!e) : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'union' })\r\nexport class UnionPipe implements PipeTransform {\r\n  transform(input: any[], args?: any[]): any[];\r\n  transform<T>(input: T, args?: any[]): T;\r\n\r\n  transform(input: any, args: any[] = []): any {\r\n    if (!Array.isArray(input) || !Array.isArray(args)) {\r\n      return input;\r\n    }\r\n\r\n    return args.reduce((newArr, currArr) => {\r\n      return newArr.concat(\r\n        currArr.reduce((noDupArr: any[], curr: any) => {\r\n          // tslint:disable-next-line:no-bitwise\r\n          return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;\r\n        }, [])\r\n      );\r\n    }, input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { extractDeepPropertyByMapKey, isObject, isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'unique' })\r\nexport class UniquePipe implements PipeTransform {\r\n  transform(input: any[], args?: string | undefined): any[];\r\n  transform<T>(input: T, args?: string | undefined): T;\r\n\r\n  transform(input: any, propertyName?: string | undefined): any {\r\n    const uniques: boolean[] = [];\r\n\r\n    return Array.isArray(input)\r\n      ? isUndefined(propertyName)\r\n        ? input.filter((e, i) => input.indexOf(e) === i)\r\n        : input.filter((e, i) => {\r\n            let value = extractDeepPropertyByMapKey(e, propertyName);\r\n            value = isObject(value) ? JSON.stringify(value) : value;\r\n\r\n            if (isUndefined(value) || uniques[value]) {\r\n              return false;\r\n            }\r\n\r\n            uniques[value] = true;\r\n\r\n            return true;\r\n          })\r\n      : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'without' })\r\nexport class WithoutPipe implements PipeTransform {\r\n  transform(input: any[], args?: any[]): any[];\r\n  transform(input: any, args?: any[]): any;\r\n\r\n  transform(input: any, args: any[] = []): any[] {\r\n    return Array.isArray(input)\r\n      ? // tslint:disable-next-line:no-bitwise\r\n        input.filter(e => !~args.indexOf(e))\r\n      : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { extractDeepPropertyByMapKey, isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'pluck', pure: false })\r\nexport class PluckPipe implements PipeTransform {\r\n  transform(input: any[], map: string): any[];\r\n  transform(input: any, map: string): any;\r\n  transform<T>(input: T, map: string): T;\r\n\r\n  transform(input: any, map: string): any {\r\n    if (Array.isArray(input)) {\r\n      return input.map(e => extractDeepPropertyByMapKey(e, map));\r\n    }\r\n\r\n    return isObject(input) ? extractDeepPropertyByMapKey(input, map) : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'shuffle' })\r\nexport class ShufflePipe implements PipeTransform {\r\n  transform(input: any[]): any[];\r\n  transform<T>(input: T): T;\r\n\r\n  // Using a version of the Fisher-Yates shuffle algorithm\r\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n  transform(input: any): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    const shuffled = [...input];\r\n    const n = input.length - 1;\r\n    for (let i = 0; i < n; ++i) {\r\n      const j = Math.floor(Math.random() * (n - i + 1)) + i;\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n\r\n    return shuffled;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'every' })\r\nexport class EveryPipe implements PipeTransform {\r\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): boolean | any[] {\r\n    return Array.isArray(input) ? input.every(predicate) : false;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'some' })\r\nexport class SomePipe implements PipeTransform {\r\n  transform(input: any[], predicate: (value: any, index: number, array: any[]) => boolean): boolean;\r\n  transform<T>(input: T, predicate: (value: any, index: number, array: any[]) => boolean): T;\r\n\r\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): any {\r\n    return Array.isArray(input) ? input.some(predicate) : input;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'sample' })\r\nexport class SamplePipe implements PipeTransform {\r\n  transform(input: any[], len?: number): any[];\r\n  transform<T>(input: T, len?: number): T;\r\n\r\n  transform(input: any, len: number = 1): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    let sample: any[] = [];\r\n    const tmp = [...input];\r\n    const l = len < tmp.length ? len : tmp.length;\r\n    for (let i = 0; i < l; ++i) {\r\n      sample = sample.concat(tmp.splice(Math.floor(Math.random() * tmp.length), 1));\r\n    }\r\n\r\n    return sample;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { extractDeepPropertyByMapKey, isFunction } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'groupBy' })\r\nexport class GroupByPipe implements PipeTransform {\r\n  transform(input: any, discriminator: any = [], delimiter: string = '|'): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return this.groupBy(input, discriminator, delimiter);\r\n  }\r\n\r\n  private groupBy(list: any[], discriminator: any, delimiter: string) {\r\n    return list.reduce((acc: any, payload: string) => {\r\n      const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);\r\n\r\n      acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];\r\n\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  private extractKeyByDiscriminator(discriminator: any, payload: string, delimiter: string) {\r\n    if (isFunction(discriminator)) {\r\n      return (<Function>discriminator)(payload);\r\n    }\r\n\r\n    if (Array.isArray(discriminator)) {\r\n      return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);\r\n    }\r\n\r\n    return extractDeepPropertyByMapKey(payload, <string>discriminator);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  extractDeepPropertyByMapKey,\r\n  extractDeepPropertyByParentMapKey,\r\n  isBoolean,\r\n  isNumberFinite,\r\n  isString,\r\n  isUndefined,\r\n} from '../helpers/helpers';\r\n\r\n// tslint:disable no-bitwise\r\n@Pipe({ name: 'filterBy' })\r\nexport class FilterByPipe implements PipeTransform {\r\n  transform(input: any[], props: Array<string>, search?: any, strict?: boolean, reverse?: boolean): any[];\r\n  transform<T>(input: T, props: Array<string>, search?: any, strict?: boolean, reverse?: boolean): T;\r\n  transform(input: any, props: Array<string>, search: any = '', strict: boolean = false, reverse: boolean = false): any {\r\n    if (\r\n      !Array.isArray(input) ||\r\n      (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))\r\n    ) {\r\n      return input;\r\n    }\r\n\r\n    const terms = String(search)\r\n      .toLowerCase()\r\n      .split(',');\r\n\r\n    return input.filter(obj => {\r\n      return props.some(prop => {\r\n        return terms.some(term => {\r\n          const value = extractDeepPropertyByMapKey(obj, prop);\r\n          /* tslint:disable */\r\n          const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);\r\n\r\n          if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {\r\n            return props.some(parent => {\r\n              const str = String(parent[tail]).toLowerCase();\r\n\r\n              return reverse ? (strict ? str !== term : ~str.indexOf(term)) : (strict ? str === term : !!~str.indexOf(term));\r\n            });\r\n          }\r\n\r\n          if (isUndefined(value)) {\r\n            return false;\r\n          }\r\n\r\n          const strValue: string = String(value).toLowerCase();\r\n\r\n          return reverse ? (strict ? term !== strValue : ~strValue.indexOf(term)) : (strict ? term === strValue : !!~strValue.indexOf(term));\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { extractDeepPropertyByMapKey, isString, isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'orderBy' })\r\nexport class OrderByPipe implements PipeTransform {\r\n  transform(input: any[], config?: any): any[];\r\n  transform<T>(input: T, config?: any): T;\r\n\r\n  transform(input: any, config?: any): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    const out = [...input];\r\n\r\n    // sort by multiple properties\r\n    if (Array.isArray(config)) {\r\n      return out.sort((a, b) => {\r\n        const l = config.length;\r\n        for (let i = 0; i < l; ++i) {\r\n          const [prop, asc] = OrderByPipe.extractFromConfig(config[i]);\r\n          const pos = OrderByPipe.orderCompare(prop, asc, a, b);\r\n          if (pos !== 0) {\r\n            return pos;\r\n          }\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    // sort by a single property value\r\n    if (isString(config)) {\r\n      const [prop, asc, sign] = OrderByPipe.extractFromConfig(config);\r\n\r\n      if (config.length === 1) {\r\n        // tslint:disable-next-line:switch-default\r\n        switch (sign) {\r\n          case '+':\r\n            return out.sort(OrderByPipe.simpleSort.bind(this));\r\n          case '-':\r\n            return out.sort(OrderByPipe.simpleSort.bind(this)).reverse();\r\n        }\r\n      }\r\n\r\n      return out.sort(OrderByPipe.orderCompare.bind(this, prop, asc));\r\n    }\r\n\r\n    // default sort by value\r\n    return out.sort(OrderByPipe.simpleSort.bind(this));\r\n  }\r\n\r\n  private static simpleSort(a: any, b: any) {\r\n    return isString(a) && isString(b) ? a.toLowerCase().localeCompare(b.toLowerCase()) : a - b;\r\n  }\r\n\r\n  private static orderCompare(prop: string, asc: boolean, a: any, b: any) {\r\n    const first = extractDeepPropertyByMapKey(a, prop);\r\n    const second = extractDeepPropertyByMapKey(b, prop);\r\n\r\n    if (first === second) {\r\n      return 0;\r\n    }\r\n\r\n    if (isUndefined(first) || first === '') {\r\n      return 1;\r\n    }\r\n\r\n    if (isUndefined(second) || second === '') {\r\n      return -1;\r\n    }\r\n\r\n    if (isString(first) && isString(second)) {\r\n      const pos = first.toLowerCase().localeCompare(second.toLowerCase());\r\n\r\n      return asc ? pos : -pos;\r\n    }\r\n\r\n    return asc ? first - second : second - first;\r\n  }\r\n\r\n  private static extractFromConfig(config: any) {\r\n    const sign = config.substr(0, 1);\r\n    const prop = config.replace(/^[-+]/, '');\r\n    const asc = sign !== '-';\r\n\r\n    return [prop, asc, sign];\r\n  }\r\n}\r\n","import { Pipe } from '@angular/core';\r\nimport { GroupByPipe } from './group-by';\r\n\r\n// tslint:disable use-pipe-transform-interface\r\n@Pipe({ name: 'groupByImpure', pure: false })\r\nexport class GroupByImpurePipe extends GroupByPipe {}\r\n","import { Pipe } from '@angular/core';\r\nimport { FilterByPipe } from './filter-by';\r\n\r\n// tslint:disable use-pipe-transform-interface\r\n@Pipe({ name: 'filterByImpure', pure: false })\r\nexport class FilterByImpurePipe extends FilterByPipe {}\r\n","import { Pipe } from '@angular/core';\r\nimport { OrderByPipe } from './order-by';\r\n\r\n// tslint:disable use-pipe-transform-interface\r\n@Pipe({ name: 'orderByImpure', pure: false })\r\nexport class OrderByImpurePipe extends OrderByPipe {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'range' })\r\nexport class RangePipe implements PipeTransform {\r\n  transform(start: number = 1, count: number = 0, step: number = 1): any {\r\n    return Array(count)\r\n      .fill('')\r\n      .map((v, i) => step * i + start);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'chunk' })\r\nexport class ChunkPipe implements PipeTransform {\r\n  transform(input: any, size: number = 1): any {\r\n    if (isString(input)) {\r\n      return this.chunk(input\r\n        .split(''), size);\r\n    }\r\n\r\n    return Array.isArray(input) ? this.chunk(input, size) : input;\r\n  }\r\n\r\n  private chunk(input: any[], size: number) {\r\n    return Array(Math.ceil(input.length / size))\r\n      .fill([])\r\n      .map((_, index) => index * size)\r\n      .map(begin => input.slice(begin, begin + size));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'fromPairs' })\r\nexport class FromPairsPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.reduce((obj, arr) => {\r\n      if (!Array.isArray(arr)) {\r\n        return obj;\r\n      }\r\n\r\n      const [prop, val] = arr;\r\n\r\n      obj[prop] = val;\r\n\r\n      return obj;\r\n    }, {});\r\n  }\r\n}\r\n","import { DiffPipe } from './diff';\r\nimport { InitialPipe } from './initial';\r\nimport { FlattenPipe } from './flatten';\r\nimport { IntersectionPipe } from './intersection';\r\nimport { ReversePipe } from './reverse';\r\nimport { TailPipe } from './tail';\r\nimport { TrurthifyPipe } from './truthify';\r\nimport { UnionPipe } from './union';\r\nimport { UniquePipe } from './unique';\r\nimport { WithoutPipe } from './without';\r\nimport { PluckPipe } from './pluck';\r\nimport { ShufflePipe } from './shuffle';\r\nimport { EveryPipe } from './every';\r\nimport { SomePipe } from './some';\r\nimport { SamplePipe } from './sample';\r\nimport { GroupByPipe } from './group-by';\r\nimport { FilterByPipe } from './filter-by';\r\nimport { OrderByPipe } from './order-by';\r\nimport { NgModule } from '@angular/core';\r\nimport { GroupByImpurePipe } from './group-by-impure';\r\nimport { FilterByImpurePipe } from './filter-by-impure';\r\nimport { OrderByImpurePipe } from './order-by-impure';\r\nimport { RangePipe } from './range';\r\nimport { ChunkPipe } from './chunk';\r\nimport { FromPairsPipe } from './from-pairs';\r\n\r\nconst ARRAY_PIPES = [\r\n  DiffPipe,\r\n  FlattenPipe,\r\n  InitialPipe,\r\n  IntersectionPipe,\r\n  ReversePipe,\r\n  TailPipe,\r\n  TrurthifyPipe,\r\n  UnionPipe,\r\n  UniquePipe,\r\n  WithoutPipe,\r\n  PluckPipe,\r\n  ShufflePipe,\r\n  EveryPipe,\r\n  SomePipe,\r\n  SamplePipe,\r\n  GroupByPipe,\r\n  GroupByImpurePipe,\r\n  FilterByPipe,\r\n  FilterByImpurePipe,\r\n  OrderByPipe,\r\n  OrderByImpurePipe,\r\n  RangePipe,\r\n  ChunkPipe,\r\n  FromPairsPipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ARRAY_PIPES,\r\n  imports: [],\r\n  exports: ARRAY_PIPES,\r\n})\r\nexport class NgArrayPipesModule {}\r\n\r\nexport { DiffPipe } from './diff';\r\nexport { InitialPipe } from './initial';\r\nexport { FlattenPipe } from './flatten';\r\nexport { IntersectionPipe } from './intersection';\r\nexport { ReversePipe } from './reverse';\r\nexport { TailPipe } from './tail';\r\nexport { TrurthifyPipe } from './truthify';\r\nexport { UnionPipe } from './union';\r\nexport { UniquePipe } from './unique';\r\nexport { WithoutPipe } from './without';\r\nexport { PluckPipe } from './pluck';\r\nexport { ShufflePipe } from './shuffle';\r\nexport { EveryPipe } from './every';\r\nexport { SomePipe } from './some';\r\nexport { SamplePipe } from './sample';\r\nexport { GroupByPipe } from './group-by';\r\nexport { FilterByPipe } from './filter-by';\r\nexport { OrderByPipe } from './order-by';\r\nexport { GroupByImpurePipe } from './group-by-impure';\r\nexport { FilterByImpurePipe } from './filter-by-impure';\r\nexport { OrderByImpurePipe } from './order-by-impure';\r\nexport { RangePipe } from './range';\r\nexport { ChunkPipe } from './chunk';\r\nexport { FromPairsPipe } from './from-pairs';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'keys' })\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(obj: any): any[] {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return Object.keys(obj);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'values' })\r\nexport class ValuesPipe implements PipeTransform {\r\n  transform(obj: any): any[] {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return Object.keys(obj).map(k => obj[k]);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'pairs' })\r\nexport class PairsPipe implements PipeTransform {\r\n  transform(obj: any): any[] {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return Object.entries(obj);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'pick' })\r\nexport class PickPipe implements PipeTransform {\r\n  transform(obj: any, ...args: Array<string>): Object {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return args.reduce((o, k) => {\r\n      return Object.assign(o, { [k]: obj[k] });\r\n    }, {});\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'omit' })\r\nexport class OmitPipe implements PipeTransform {\r\n  transform(obj: any, ...args: Array<string>): Object {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return (\r\n      Object.keys(obj)\r\n        // tslint:disable-next-line:no-bitwise\r\n        .filter(k => !~args.indexOf(k))\r\n        .reduce((o, k) => {\r\n          return Object.assign(o, { [k]: obj[k] });\r\n        }, {})\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'invert' })\r\nexport class InvertPipe implements PipeTransform {\r\n  transform(obj: any): Object {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return Object.keys(obj).reduce((o, k) => {\r\n      return Object.assign(o, { [obj[k]]: k });\r\n    }, {});\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'invertBy' })\r\nexport class InvertByPipe implements PipeTransform {\r\n  transform(obj: any, cb?: Function): Object {\r\n    if (Array.isArray(obj) || !isObject(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    return Object.keys(obj).reduce((o: any, k: string) => {\r\n      const key = cb ? cb(obj[k]) : obj[k];\r\n\r\n      return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, { [key]: [k] });\r\n    }, {});\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { getKeysTwoObjects, isDeepEqual, isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'diffObj' })\r\nexport class DiffObjPipe implements PipeTransform {\r\n  transform(obj: any, original: any = {}): any {\r\n    if (Array.isArray(obj) || Array.isArray(original) || !isObject(obj) || !isObject(original)) {\r\n      return {};\r\n    }\r\n\r\n    return getKeysTwoObjects(obj, original).reduce((diff: any, key: any) => {\r\n      if (!isDeepEqual(original[key], obj[key])) {\r\n        diff[key] = obj[key];\r\n      }\r\n\r\n      return diff;\r\n    }, {});\r\n  }\r\n}\r\n","import { KeysPipe } from './keys';\r\nimport { ValuesPipe } from './values';\r\nimport { PairsPipe } from './pairs';\r\nimport { PickPipe } from './pick';\r\nimport { OmitPipe } from './omit';\r\nimport { InvertPipe } from './invert';\r\nimport { InvertByPipe } from './invert-by';\r\nimport { DiffObjPipe } from './diff-obj';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];\r\n\r\n@NgModule({\r\n  declarations: OBJECT_PIPES,\r\n  imports: [],\r\n  exports: OBJECT_PIPES,\r\n})\r\nexport class NgObjectPipesModule {}\r\n\r\nexport { KeysPipe } from './keys';\r\nexport { ValuesPipe } from './values';\r\nexport { PairsPipe } from './pairs';\r\nexport { PickPipe } from './pick';\r\nexport { OmitPipe } from './omit';\r\nexport { InvertPipe } from './invert';\r\nexport { InvertByPipe } from './invert-by';\r\nexport { DiffObjPipe } from './diff-obj';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isVowel } from '../helpers/helpers';\r\n\r\n@Pipe({\r\n  name: 'aOrAn',\r\n})\r\n/**\r\n * Takes a string and returns the string prepended by 'a' or 'an'.\r\n * Uses both naive and holdout-list approaches.\r\n * @constructor\r\n * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.\r\n */\r\nexport class AorAnPipe implements PipeTransform {\r\n  private irregularMap: any = {\r\n    herb: 'an',\r\n    honor: 'an',\r\n    honorable: 'an',\r\n    hour: 'an',\r\n    mba: 'an',\r\n    msc: 'an',\r\n    'm.sc.': 'an',\r\n    unicorn: 'a',\r\n  };\r\n  transform(stringEntity: string): string {\r\n    if (!stringEntity || stringEntity === '') {\r\n      return '';\r\n    } else {\r\n      const firstWord = stringEntity.trim().split(' ')[0];\r\n      if (this.irregularMap[firstWord.toLocaleLowerCase()]) {\r\n        return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;\r\n      } else {\r\n        return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString, ucFirst } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'ucwords' })\r\nexport class UcWordsPipe implements PipeTransform {\r\n  transform(input: string): string;\r\n  transform(input: any): any;\r\n\r\n  transform(text: any): string {\r\n    if (isString(text)) {\r\n      return text\r\n        .split(' ')\r\n        .map((sub: any) => ucFirst(sub))\r\n        .join(' ');\r\n    }\r\n\r\n    return text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'ltrim' })\r\nexport class LeftTrimPipe implements PipeTransform {\r\n  transform(text: string, chars: string = '\\\\s'): string {\r\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+`), '') : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'repeat' })\r\nexport class RepeatPipe implements PipeTransform {\r\n  transform(str: string, n: number = 1, separator: string = ''): string {\r\n    if (n <= 0) {\r\n      throw new RangeError();\r\n    }\r\n\r\n    return n === 1 ? str : this.repeat(str, n - 1, separator);\r\n  }\r\n\r\n  private repeat(str: string, n: number, separator: string): string {\r\n    return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'rtrim' })\r\nexport class RightTrimPipe implements PipeTransform {\r\n  transform(text: string, chars: string = '\\\\s'): string {\r\n    return isString(text) ? text.replace(new RegExp(`[${chars}]+$`), '') : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString, isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'scan' })\r\nexport class ScanPipe implements PipeTransform {\r\n  transform(text: string, args: string[] = []): string {\r\n    return isString(text)\r\n      ? text.replace(/\\{(\\d+)}/g, (match, index) => (!isUndefined(args[index]) ? args[index] : match))\r\n      : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'shorten' })\r\nexport class ShortenPipe implements PipeTransform {\r\n  transform(input: string, length?: number, suffix?: string, wordBreak?: boolean): string;\r\n  transform(input: any, length?: number, suffix?: string, wordBreak?: boolean): any;\r\n\r\n  transform(text: any, length: number = 0, suffix: string = '', wordBreak: boolean = true): string {\r\n    if (!isString(text)) {\r\n      return text;\r\n    }\r\n\r\n    if (text.length > length) {\r\n      if (wordBreak) {\r\n        return text.slice(0, length) + suffix;\r\n      }\r\n\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (!!~text.indexOf(' ', length)) {\r\n        return text.slice(0, text.indexOf(' ', length)) + suffix;\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'stripTags' })\r\nexport class StripTagsPipe implements PipeTransform {\r\n  transform(text: string, ...allowedTags: any[]): string {\r\n    return allowedTags.length > 0\r\n      ? text.replace(new RegExp(`<(?!\\/?(${allowedTags.join('|')})\\s*\\/?)[^>]+>`, 'g'), '')\r\n      : text.replace(/<(?:.|\\s)*?>/g, '');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'trim' })\r\nexport class TrimPipe implements PipeTransform {\r\n  transform(text: string, chars: string = '\\\\s'): string {\r\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '') : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString, ucFirst } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'ucfirst' })\r\nexport class UcFirstPipe implements PipeTransform {\r\n  transform(input: string): string;\r\n  transform(input: any): any;\r\n\r\n  transform(text: any): string {\r\n    return isString(text) ? ucFirst(text) : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'slugify' })\r\nexport class SlugifyPipe implements PipeTransform {\r\n  transform(str: string): string {\r\n    return isString(str)\r\n      ? str\r\n          .toLowerCase()\r\n          .trim()\r\n          .replace(/[^\\w\\-]+/g, ' ')\r\n          .replace(/\\s+/g, '-')\r\n      : str;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'camelize' })\r\nexport class CamelizePipe implements PipeTransform {\r\n  transform(input: string, chars?: string): string;\r\n  transform(input: any, chars?: string): any;\r\n\r\n  transform(text: any, chars: string = '\\\\s'): string {\r\n    if (!isString(text)) {\r\n      return text;\r\n    }\r\n\r\n    return text\r\n      .toLowerCase()\r\n      .split(/[-_\\s]/g)\r\n      .filter((v: string) => !!v)\r\n      .map((word: string, key: any) => {\r\n        return !key ? word : word.slice(0, 1).toUpperCase() + word.slice(1);\r\n      })\r\n      .join('');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'latinise' })\r\nexport class LatinisePipe implements PipeTransform {\r\n  // Source: http://semplicewebsites.com/removing-accents-javascript\r\n  // tslint:disable-next-line whitespace max-line-length object-literal-key-quotes\r\n  private latinMap: any = {\r\n    'Á': 'A',\r\n    'Ă': 'A',\r\n    'Ắ': 'A',\r\n    'Ặ': 'A',\r\n    'Ằ': 'A',\r\n    'Ẳ': 'A',\r\n    'Ẵ': 'A',\r\n    'Ǎ': 'A',\r\n    'Â': 'A',\r\n    'Ấ': 'A',\r\n    'Ậ': 'A',\r\n    'Ầ': 'A',\r\n    'Ẩ': 'A',\r\n    'Ẫ': 'A',\r\n    'Ä': 'A',\r\n    'Ǟ': 'A',\r\n    'Ȧ': 'A',\r\n    'Ǡ': 'A',\r\n    'Ạ': 'A',\r\n    'Ȁ': 'A',\r\n    'À': 'A',\r\n    'Ả': 'A',\r\n    'Ȃ': 'A',\r\n    'Ā': 'A',\r\n    'Ą': 'A',\r\n    'Å': 'A',\r\n    'Ǻ': 'A',\r\n    'Ḁ': 'A',\r\n    'Ⱥ': 'A',\r\n    'Ã': 'A',\r\n    'Ꜳ': 'AA',\r\n    'Æ': 'AE',\r\n    'Ǽ': 'AE',\r\n    'Ǣ': 'AE',\r\n    'Ꜵ': 'AO',\r\n    'Ꜷ': 'AU',\r\n    'Ꜹ': 'AV',\r\n    'Ꜻ': 'AV',\r\n    'Ꜽ': 'AY',\r\n    'Ḃ': 'B',\r\n    'Ḅ': 'B',\r\n    'Ɓ': 'B',\r\n    'Ḇ': 'B',\r\n    'Ƀ': 'B',\r\n    'Ƃ': 'B',\r\n    'Ć': 'C',\r\n    'Č': 'C',\r\n    'Ç': 'C',\r\n    'Ḉ': 'C',\r\n    'Ĉ': 'C',\r\n    'Ċ': 'C',\r\n    'Ƈ': 'C',\r\n    'Ȼ': 'C',\r\n    'Ď': 'D',\r\n    'Ḑ': 'D',\r\n    'Ḓ': 'D',\r\n    'Ḋ': 'D',\r\n    'Ḍ': 'D',\r\n    'Ɗ': 'D',\r\n    'Ḏ': 'D',\r\n    'ǲ': 'D',\r\n    'ǅ': 'D',\r\n    'Đ': 'D',\r\n    'Ƌ': 'D',\r\n    'Ǳ': 'DZ',\r\n    'Ǆ': 'DZ',\r\n    'É': 'E',\r\n    'Ĕ': 'E',\r\n    'Ě': 'E',\r\n    'Ȩ': 'E',\r\n    'Ḝ': 'E',\r\n    'Ê': 'E',\r\n    'Ế': 'E',\r\n    'Ệ': 'E',\r\n    'Ề': 'E',\r\n    'Ể': 'E',\r\n    'Ễ': 'E',\r\n    'Ḙ': 'E',\r\n    'Ë': 'E',\r\n    'Ė': 'E',\r\n    'Ẹ': 'E',\r\n    'Ȅ': 'E',\r\n    'È': 'E',\r\n    'Ẻ': 'E',\r\n    'Ȇ': 'E',\r\n    'Ē': 'E',\r\n    'Ḗ': 'E',\r\n    'Ḕ': 'E',\r\n    'Ę': 'E',\r\n    'Ɇ': 'E',\r\n    'Ẽ': 'E',\r\n    'Ḛ': 'E',\r\n    'Ꝫ': 'ET',\r\n    'Ḟ': 'F',\r\n    'Ƒ': 'F',\r\n    'Ǵ': 'G',\r\n    'Ğ': 'G',\r\n    'Ǧ': 'G',\r\n    'Ģ': 'G',\r\n    'Ĝ': 'G',\r\n    'Ġ': 'G',\r\n    'Ɠ': 'G',\r\n    'Ḡ': 'G',\r\n    'Ǥ': 'G',\r\n    'Ḫ': 'H',\r\n    'Ȟ': 'H',\r\n    'Ḩ': 'H',\r\n    'Ĥ': 'H',\r\n    'Ⱨ': 'H',\r\n    'Ḧ': 'H',\r\n    'Ḣ': 'H',\r\n    'Ḥ': 'H',\r\n    'Ħ': 'H',\r\n    'Í': 'I',\r\n    'Ĭ': 'I',\r\n    'Ǐ': 'I',\r\n    'Î': 'I',\r\n    'Ï': 'I',\r\n    'Ḯ': 'I',\r\n    'İ': 'I',\r\n    'Ị': 'I',\r\n    'Ȉ': 'I',\r\n    'Ì': 'I',\r\n    'Ỉ': 'I',\r\n    'Ȋ': 'I',\r\n    'Ī': 'I',\r\n    'Į': 'I',\r\n    'Ɨ': 'I',\r\n    'Ĩ': 'I',\r\n    'Ḭ': 'I',\r\n    'Ꝺ': 'D',\r\n    'Ꝼ': 'F',\r\n    'Ᵹ': 'G',\r\n    'Ꞃ': 'R',\r\n    'Ꞅ': 'S',\r\n    'Ꞇ': 'T',\r\n    'Ꝭ': 'IS',\r\n    'Ĵ': 'J',\r\n    'Ɉ': 'J',\r\n    'Ḱ': 'K',\r\n    'Ǩ': 'K',\r\n    'Ķ': 'K',\r\n    'Ⱪ': 'K',\r\n    'Ꝃ': 'K',\r\n    'Ḳ': 'K',\r\n    'Ƙ': 'K',\r\n    'Ḵ': 'K',\r\n    'Ꝁ': 'K',\r\n    'Ꝅ': 'K',\r\n    'Ĺ': 'L',\r\n    'Ƚ': 'L',\r\n    'Ľ': 'L',\r\n    'Ļ': 'L',\r\n    'Ḽ': 'L',\r\n    'Ḷ': 'L',\r\n    'Ḹ': 'L',\r\n    'Ⱡ': 'L',\r\n    'Ꝉ': 'L',\r\n    'Ḻ': 'L',\r\n    'Ŀ': 'L',\r\n    'Ɫ': 'L',\r\n    'ǈ': 'L',\r\n    'Ł': 'L',\r\n    'Ǉ': 'LJ',\r\n    'Ḿ': 'M',\r\n    'Ṁ': 'M',\r\n    'Ṃ': 'M',\r\n    'Ɱ': 'M',\r\n    'Ń': 'N',\r\n    'Ň': 'N',\r\n    'Ņ': 'N',\r\n    'Ṋ': 'N',\r\n    'Ṅ': 'N',\r\n    'Ṇ': 'N',\r\n    'Ǹ': 'N',\r\n    'Ɲ': 'N',\r\n    'Ṉ': 'N',\r\n    'Ƞ': 'N',\r\n    'ǋ': 'N',\r\n    'Ñ': 'N',\r\n    'Ǌ': 'NJ',\r\n    'Ó': 'O',\r\n    'Ŏ': 'O',\r\n    'Ǒ': 'O',\r\n    'Ô': 'O',\r\n    'Ố': 'O',\r\n    'Ộ': 'O',\r\n    'Ồ': 'O',\r\n    'Ổ': 'O',\r\n    'Ỗ': 'O',\r\n    'Ö': 'O',\r\n    'Ȫ': 'O',\r\n    'Ȯ': 'O',\r\n    'Ȱ': 'O',\r\n    'Ọ': 'O',\r\n    'Ő': 'O',\r\n    'Ȍ': 'O',\r\n    'Ò': 'O',\r\n    'Ỏ': 'O',\r\n    'Ơ': 'O',\r\n    'Ớ': 'O',\r\n    'Ợ': 'O',\r\n    'Ờ': 'O',\r\n    'Ở': 'O',\r\n    'Ỡ': 'O',\r\n    'Ȏ': 'O',\r\n    'Ꝋ': 'O',\r\n    'Ꝍ': 'O',\r\n    'Ō': 'O',\r\n    'Ṓ': 'O',\r\n    'Ṑ': 'O',\r\n    'Ɵ': 'O',\r\n    'Ǫ': 'O',\r\n    'Ǭ': 'O',\r\n    'Ø': 'O',\r\n    'Ǿ': 'O',\r\n    'Õ': 'O',\r\n    'Ṍ': 'O',\r\n    'Ṏ': 'O',\r\n    'Ȭ': 'O',\r\n    'Ƣ': 'OI',\r\n    'Ꝏ': 'OO',\r\n    'Ɛ': 'E',\r\n    'Ɔ': 'O',\r\n    'Ȣ': 'OU',\r\n    'Ṕ': 'P',\r\n    'Ṗ': 'P',\r\n    'Ꝓ': 'P',\r\n    'Ƥ': 'P',\r\n    'Ꝕ': 'P',\r\n    'Ᵽ': 'P',\r\n    'Ꝑ': 'P',\r\n    'Ꝙ': 'Q',\r\n    'Ꝗ': 'Q',\r\n    'Ŕ': 'R',\r\n    'Ř': 'R',\r\n    'Ŗ': 'R',\r\n    'Ṙ': 'R',\r\n    'Ṛ': 'R',\r\n    'Ṝ': 'R',\r\n    'Ȑ': 'R',\r\n    'Ȓ': 'R',\r\n    'Ṟ': 'R',\r\n    'Ɍ': 'R',\r\n    'Ɽ': 'R',\r\n    'Ꜿ': 'C',\r\n    'Ǝ': 'E',\r\n    'Ś': 'S',\r\n    'Ṥ': 'S',\r\n    'Š': 'S',\r\n    'Ṧ': 'S',\r\n    'Ş': 'S',\r\n    'Ŝ': 'S',\r\n    'Ș': 'S',\r\n    'Ṡ': 'S',\r\n    'Ṣ': 'S',\r\n    'Ṩ': 'S',\r\n    'ẞ': 'SS',\r\n    'Ť': 'T',\r\n    'Ţ': 'T',\r\n    'Ṱ': 'T',\r\n    'Ț': 'T',\r\n    'Ⱦ': 'T',\r\n    'Ṫ': 'T',\r\n    'Ṭ': 'T',\r\n    'Ƭ': 'T',\r\n    'Ṯ': 'T',\r\n    'Ʈ': 'T',\r\n    'Ŧ': 'T',\r\n    'Ɐ': 'A',\r\n    'Ꞁ': 'L',\r\n    'Ɯ': 'M',\r\n    'Ʌ': 'V',\r\n    'Ꜩ': 'TZ',\r\n    'Ú': 'U',\r\n    'Ŭ': 'U',\r\n    'Ǔ': 'U',\r\n    'Û': 'U',\r\n    'Ṷ': 'U',\r\n    'Ü': 'U',\r\n    'Ǘ': 'U',\r\n    'Ǚ': 'U',\r\n    'Ǜ': 'U',\r\n    'Ǖ': 'U',\r\n    'Ṳ': 'U',\r\n    'Ụ': 'U',\r\n    'Ű': 'U',\r\n    'Ȕ': 'U',\r\n    'Ù': 'U',\r\n    'Ủ': 'U',\r\n    'Ư': 'U',\r\n    'Ứ': 'U',\r\n    'Ự': 'U',\r\n    'Ừ': 'U',\r\n    'Ử': 'U',\r\n    'Ữ': 'U',\r\n    'Ȗ': 'U',\r\n    'Ū': 'U',\r\n    'Ṻ': 'U',\r\n    'Ų': 'U',\r\n    'Ů': 'U',\r\n    'Ũ': 'U',\r\n    'Ṹ': 'U',\r\n    'Ṵ': 'U',\r\n    'Ꝟ': 'V',\r\n    'Ṿ': 'V',\r\n    'Ʋ': 'V',\r\n    'Ṽ': 'V',\r\n    'Ꝡ': 'VY',\r\n    'Ẃ': 'W',\r\n    'Ŵ': 'W',\r\n    'Ẅ': 'W',\r\n    'Ẇ': 'W',\r\n    'Ẉ': 'W',\r\n    'Ẁ': 'W',\r\n    'Ⱳ': 'W',\r\n    'Ẍ': 'X',\r\n    'Ẋ': 'X',\r\n    'Ý': 'Y',\r\n    'Ŷ': 'Y',\r\n    'Ÿ': 'Y',\r\n    'Ẏ': 'Y',\r\n    'Ỵ': 'Y',\r\n    'Ỳ': 'Y',\r\n    'Ƴ': 'Y',\r\n    'Ỷ': 'Y',\r\n    'Ỿ': 'Y',\r\n    'Ȳ': 'Y',\r\n    'Ɏ': 'Y',\r\n    'Ỹ': 'Y',\r\n    'Ź': 'Z',\r\n    'Ž': 'Z',\r\n    'Ẑ': 'Z',\r\n    'Ⱬ': 'Z',\r\n    'Ż': 'Z',\r\n    'Ẓ': 'Z',\r\n    'Ȥ': 'Z',\r\n    'Ẕ': 'Z',\r\n    'Ƶ': 'Z',\r\n    'Ĳ': 'IJ',\r\n    'Œ': 'OE',\r\n    'ᴀ': 'A',\r\n    'ᴁ': 'AE',\r\n    'ʙ': 'B',\r\n    'ᴃ': 'B',\r\n    'ᴄ': 'C',\r\n    'ᴅ': 'D',\r\n    'ᴇ': 'E',\r\n    'ꜰ': 'F',\r\n    'ɢ': 'G',\r\n    'ʛ': 'G',\r\n    'ʜ': 'H',\r\n    'ɪ': 'I',\r\n    'ʁ': 'R',\r\n    'ᴊ': 'J',\r\n    'ᴋ': 'K',\r\n    'ʟ': 'L',\r\n    'ᴌ': 'L',\r\n    'ᴍ': 'M',\r\n    'ɴ': 'N',\r\n    'ᴏ': 'O',\r\n    'ɶ': 'OE',\r\n    'ᴐ': 'O',\r\n    'ᴕ': 'OU',\r\n    'ᴘ': 'P',\r\n    'ʀ': 'R',\r\n    'ᴎ': 'N',\r\n    'ᴙ': 'R',\r\n    'ꜱ': 'S',\r\n    'ᴛ': 'T',\r\n    'ⱻ': 'E',\r\n    'ᴚ': 'R',\r\n    'ᴜ': 'U',\r\n    'ᴠ': 'V',\r\n    'ᴡ': 'W',\r\n    'ʏ': 'Y',\r\n    'ᴢ': 'Z',\r\n    'á': 'a',\r\n    'ă': 'a',\r\n    'ắ': 'a',\r\n    'ặ': 'a',\r\n    'ằ': 'a',\r\n    'ẳ': 'a',\r\n    'ẵ': 'a',\r\n    'ǎ': 'a',\r\n    'â': 'a',\r\n    'ấ': 'a',\r\n    'ậ': 'a',\r\n    'ầ': 'a',\r\n    'ẩ': 'a',\r\n    'ẫ': 'a',\r\n    'ä': 'a',\r\n    'ǟ': 'a',\r\n    'ȧ': 'a',\r\n    'ǡ': 'a',\r\n    'ạ': 'a',\r\n    'ȁ': 'a',\r\n    'à': 'a',\r\n    'ả': 'a',\r\n    'ȃ': 'a',\r\n    'ā': 'a',\r\n    'ą': 'a',\r\n    'ᶏ': 'a',\r\n    'ẚ': 'a',\r\n    'å': 'a',\r\n    'ǻ': 'a',\r\n    'ḁ': 'a',\r\n    'ⱥ': 'a',\r\n    'ã': 'a',\r\n    'ꜳ': 'aa',\r\n    'æ': 'ae',\r\n    'ǽ': 'ae',\r\n    'ǣ': 'ae',\r\n    'ꜵ': 'ao',\r\n    'ꜷ': 'au',\r\n    'ꜹ': 'av',\r\n    'ꜻ': 'av',\r\n    'ꜽ': 'ay',\r\n    'ḃ': 'b',\r\n    'ḅ': 'b',\r\n    'ɓ': 'b',\r\n    'ḇ': 'b',\r\n    'ᵬ': 'b',\r\n    'ᶀ': 'b',\r\n    'ƀ': 'b',\r\n    'ƃ': 'b',\r\n    'ɵ': 'o',\r\n    'ć': 'c',\r\n    'č': 'c',\r\n    'ç': 'c',\r\n    'ḉ': 'c',\r\n    'ĉ': 'c',\r\n    'ɕ': 'c',\r\n    'ċ': 'c',\r\n    'ƈ': 'c',\r\n    'ȼ': 'c',\r\n    'ď': 'd',\r\n    'ḑ': 'd',\r\n    'ḓ': 'd',\r\n    'ȡ': 'd',\r\n    'ḋ': 'd',\r\n    'ḍ': 'd',\r\n    'ɗ': 'd',\r\n    'ᶑ': 'd',\r\n    'ḏ': 'd',\r\n    'ᵭ': 'd',\r\n    'ᶁ': 'd',\r\n    'đ': 'd',\r\n    'ɖ': 'd',\r\n    'ƌ': 'd',\r\n    'ı': 'i',\r\n    'ȷ': 'j',\r\n    'ɟ': 'j',\r\n    'ʄ': 'j',\r\n    'ǳ': 'dz',\r\n    'ǆ': 'dz',\r\n    'é': 'e',\r\n    'ĕ': 'e',\r\n    'ě': 'e',\r\n    'ȩ': 'e',\r\n    'ḝ': 'e',\r\n    'ê': 'e',\r\n    'ế': 'e',\r\n    'ệ': 'e',\r\n    'ề': 'e',\r\n    'ể': 'e',\r\n    'ễ': 'e',\r\n    'ḙ': 'e',\r\n    'ë': 'e',\r\n    'ė': 'e',\r\n    'ẹ': 'e',\r\n    'ȅ': 'e',\r\n    'è': 'e',\r\n    'ẻ': 'e',\r\n    'ȇ': 'e',\r\n    'ē': 'e',\r\n    'ḗ': 'e',\r\n    'ḕ': 'e',\r\n    'ⱸ': 'e',\r\n    'ę': 'e',\r\n    'ᶒ': 'e',\r\n    'ɇ': 'e',\r\n    'ẽ': 'e',\r\n    'ḛ': 'e',\r\n    'ꝫ': 'et',\r\n    'ḟ': 'f',\r\n    'ƒ': 'f',\r\n    'ᵮ': 'f',\r\n    'ᶂ': 'f',\r\n    'ǵ': 'g',\r\n    'ğ': 'g',\r\n    'ǧ': 'g',\r\n    'ģ': 'g',\r\n    'ĝ': 'g',\r\n    'ġ': 'g',\r\n    'ɠ': 'g',\r\n    'ḡ': 'g',\r\n    'ᶃ': 'g',\r\n    'ǥ': 'g',\r\n    'ḫ': 'h',\r\n    'ȟ': 'h',\r\n    'ḩ': 'h',\r\n    'ĥ': 'h',\r\n    'ⱨ': 'h',\r\n    'ḧ': 'h',\r\n    'ḣ': 'h',\r\n    'ḥ': 'h',\r\n    'ɦ': 'h',\r\n    'ẖ': 'h',\r\n    'ħ': 'h',\r\n    'ƕ': 'hv',\r\n    'í': 'i',\r\n    'ĭ': 'i',\r\n    'ǐ': 'i',\r\n    'î': 'i',\r\n    'ï': 'i',\r\n    'ḯ': 'i',\r\n    'ị': 'i',\r\n    'ȉ': 'i',\r\n    'ì': 'i',\r\n    'ỉ': 'i',\r\n    'ȋ': 'i',\r\n    'ī': 'i',\r\n    'į': 'i',\r\n    'ᶖ': 'i',\r\n    'ɨ': 'i',\r\n    'ĩ': 'i',\r\n    'ḭ': 'i',\r\n    'ꝺ': 'd',\r\n    'ꝼ': 'f',\r\n    'ᵹ': 'g',\r\n    'ꞃ': 'r',\r\n    'ꞅ': 's',\r\n    'ꞇ': 't',\r\n    'ꝭ': 'is',\r\n    'ǰ': 'j',\r\n    'ĵ': 'j',\r\n    'ʝ': 'j',\r\n    'ɉ': 'j',\r\n    'ḱ': 'k',\r\n    'ǩ': 'k',\r\n    'ķ': 'k',\r\n    'ⱪ': 'k',\r\n    'ꝃ': 'k',\r\n    'ḳ': 'k',\r\n    'ƙ': 'k',\r\n    'ḵ': 'k',\r\n    'ᶄ': 'k',\r\n    'ꝁ': 'k',\r\n    'ꝅ': 'k',\r\n    'ĺ': 'l',\r\n    'ƚ': 'l',\r\n    'ɬ': 'l',\r\n    'ľ': 'l',\r\n    'ļ': 'l',\r\n    'ḽ': 'l',\r\n    'ȴ': 'l',\r\n    'ḷ': 'l',\r\n    'ḹ': 'l',\r\n    'ⱡ': 'l',\r\n    'ꝉ': 'l',\r\n    'ḻ': 'l',\r\n    'ŀ': 'l',\r\n    'ɫ': 'l',\r\n    'ᶅ': 'l',\r\n    'ɭ': 'l',\r\n    'ł': 'l',\r\n    'ǉ': 'lj',\r\n    'ſ': 's',\r\n    'ẜ': 's',\r\n    'ẛ': 's',\r\n    'ẝ': 's',\r\n    'ḿ': 'm',\r\n    'ṁ': 'm',\r\n    'ṃ': 'm',\r\n    'ɱ': 'm',\r\n    'ᵯ': 'm',\r\n    'ᶆ': 'm',\r\n    'ń': 'n',\r\n    'ň': 'n',\r\n    'ņ': 'n',\r\n    'ṋ': 'n',\r\n    'ȵ': 'n',\r\n    'ṅ': 'n',\r\n    'ṇ': 'n',\r\n    'ǹ': 'n',\r\n    'ɲ': 'n',\r\n    'ṉ': 'n',\r\n    'ƞ': 'n',\r\n    'ᵰ': 'n',\r\n    'ᶇ': 'n',\r\n    'ɳ': 'n',\r\n    'ñ': 'n',\r\n    'ǌ': 'nj',\r\n    'ó': 'o',\r\n    'ŏ': 'o',\r\n    'ǒ': 'o',\r\n    'ô': 'o',\r\n    'ố': 'o',\r\n    'ộ': 'o',\r\n    'ồ': 'o',\r\n    'ổ': 'o',\r\n    'ỗ': 'o',\r\n    'ö': 'o',\r\n    'ȫ': 'o',\r\n    'ȯ': 'o',\r\n    'ȱ': 'o',\r\n    'ọ': 'o',\r\n    'ő': 'o',\r\n    'ȍ': 'o',\r\n    'ò': 'o',\r\n    'ỏ': 'o',\r\n    'ơ': 'o',\r\n    'ớ': 'o',\r\n    'ợ': 'o',\r\n    'ờ': 'o',\r\n    'ở': 'o',\r\n    'ỡ': 'o',\r\n    'ȏ': 'o',\r\n    'ꝋ': 'o',\r\n    'ꝍ': 'o',\r\n    'ⱺ': 'o',\r\n    'ō': 'o',\r\n    'ṓ': 'o',\r\n    'ṑ': 'o',\r\n    'ǫ': 'o',\r\n    'ǭ': 'o',\r\n    'ø': 'o',\r\n    'ǿ': 'o',\r\n    'õ': 'o',\r\n    'ṍ': 'o',\r\n    'ṏ': 'o',\r\n    'ȭ': 'o',\r\n    'ƣ': 'oi',\r\n    'ꝏ': 'oo',\r\n    'ɛ': 'e',\r\n    'ᶓ': 'e',\r\n    'ɔ': 'o',\r\n    'ᶗ': 'o',\r\n    'ȣ': 'ou',\r\n    'ṕ': 'p',\r\n    'ṗ': 'p',\r\n    'ꝓ': 'p',\r\n    'ƥ': 'p',\r\n    'ᵱ': 'p',\r\n    'ᶈ': 'p',\r\n    'ꝕ': 'p',\r\n    'ᵽ': 'p',\r\n    'ꝑ': 'p',\r\n    'ꝙ': 'q',\r\n    'ʠ': 'q',\r\n    'ɋ': 'q',\r\n    'ꝗ': 'q',\r\n    'ŕ': 'r',\r\n    'ř': 'r',\r\n    'ŗ': 'r',\r\n    'ṙ': 'r',\r\n    'ṛ': 'r',\r\n    'ṝ': 'r',\r\n    'ȑ': 'r',\r\n    'ɾ': 'r',\r\n    'ᵳ': 'r',\r\n    'ȓ': 'r',\r\n    'ṟ': 'r',\r\n    'ɼ': 'r',\r\n    'ᵲ': 'r',\r\n    'ᶉ': 'r',\r\n    'ɍ': 'r',\r\n    'ɽ': 'r',\r\n    'ↄ': 'c',\r\n    'ꜿ': 'c',\r\n    'ɘ': 'e',\r\n    'ɿ': 'r',\r\n    'ś': 's',\r\n    'ṥ': 's',\r\n    'š': 's',\r\n    'ṧ': 's',\r\n    'ş': 's',\r\n    'ŝ': 's',\r\n    'ș': 's',\r\n    'ṡ': 's',\r\n    'ṣ': 's',\r\n    'ṩ': 's',\r\n    'ʂ': 's',\r\n    'ᵴ': 's',\r\n    'ᶊ': 's',\r\n    'ȿ': 's',\r\n    'ɡ': 'g',\r\n    'ß': 'ss',\r\n    'ᴑ': 'o',\r\n    'ᴓ': 'o',\r\n    'ᴝ': 'u',\r\n    'ť': 't',\r\n    'ţ': 't',\r\n    'ṱ': 't',\r\n    'ț': 't',\r\n    'ȶ': 't',\r\n    'ẗ': 't',\r\n    'ⱦ': 't',\r\n    'ṫ': 't',\r\n    'ṭ': 't',\r\n    'ƭ': 't',\r\n    'ṯ': 't',\r\n    'ᵵ': 't',\r\n    'ƫ': 't',\r\n    'ʈ': 't',\r\n    'ŧ': 't',\r\n    'ᵺ': 'th',\r\n    'ɐ': 'a',\r\n    'ᴂ': 'ae',\r\n    'ǝ': 'e',\r\n    'ᵷ': 'g',\r\n    'ɥ': 'h',\r\n    'ʮ': 'h',\r\n    'ʯ': 'h',\r\n    'ᴉ': 'i',\r\n    'ʞ': 'k',\r\n    'ꞁ': 'l',\r\n    'ɯ': 'm',\r\n    'ɰ': 'm',\r\n    'ᴔ': 'oe',\r\n    'ɹ': 'r',\r\n    'ɻ': 'r',\r\n    'ɺ': 'r',\r\n    'ⱹ': 'r',\r\n    'ʇ': 't',\r\n    'ʌ': 'v',\r\n    'ʍ': 'w',\r\n    'ʎ': 'y',\r\n    'ꜩ': 'tz',\r\n    'ú': 'u',\r\n    'ŭ': 'u',\r\n    'ǔ': 'u',\r\n    'û': 'u',\r\n    'ṷ': 'u',\r\n    'ü': 'u',\r\n    'ǘ': 'u',\r\n    'ǚ': 'u',\r\n    'ǜ': 'u',\r\n    'ǖ': 'u',\r\n    'ṳ': 'u',\r\n    'ụ': 'u',\r\n    'ű': 'u',\r\n    'ȕ': 'u',\r\n    'ù': 'u',\r\n    'ủ': 'u',\r\n    'ư': 'u',\r\n    'ứ': 'u',\r\n    'ự': 'u',\r\n    'ừ': 'u',\r\n    'ử': 'u',\r\n    'ữ': 'u',\r\n    'ȗ': 'u',\r\n    'ū': 'u',\r\n    'ṻ': 'u',\r\n    'ų': 'u',\r\n    'ᶙ': 'u',\r\n    'ů': 'u',\r\n    'ũ': 'u',\r\n    'ṹ': 'u',\r\n    'ṵ': 'u',\r\n    'ᵫ': 'ue',\r\n    'ꝸ': 'um',\r\n    'ⱴ': 'v',\r\n    'ꝟ': 'v',\r\n    'ṿ': 'v',\r\n    'ʋ': 'v',\r\n    'ᶌ': 'v',\r\n    'ⱱ': 'v',\r\n    'ṽ': 'v',\r\n    'ꝡ': 'vy',\r\n    'ẃ': 'w',\r\n    'ŵ': 'w',\r\n    'ẅ': 'w',\r\n    'ẇ': 'w',\r\n    'ẉ': 'w',\r\n    'ẁ': 'w',\r\n    'ⱳ': 'w',\r\n    'ẘ': 'w',\r\n    'ẍ': 'x',\r\n    'ẋ': 'x',\r\n    'ᶍ': 'x',\r\n    'ý': 'y',\r\n    'ŷ': 'y',\r\n    'ÿ': 'y',\r\n    'ẏ': 'y',\r\n    'ỵ': 'y',\r\n    'ỳ': 'y',\r\n    'ƴ': 'y',\r\n    'ỷ': 'y',\r\n    'ỿ': 'y',\r\n    'ȳ': 'y',\r\n    'ẙ': 'y',\r\n    'ɏ': 'y',\r\n    'ỹ': 'y',\r\n    'ź': 'z',\r\n    'ž': 'z',\r\n    'ẑ': 'z',\r\n    'ʑ': 'z',\r\n    'ⱬ': 'z',\r\n    'ż': 'z',\r\n    'ẓ': 'z',\r\n    'ȥ': 'z',\r\n    'ẕ': 'z',\r\n    'ᵶ': 'z',\r\n    'ᶎ': 'z',\r\n    'ʐ': 'z',\r\n    'ƶ': 'z',\r\n    'ɀ': 'z',\r\n    'ﬀ': 'ff',\r\n    'ﬃ': 'ffi',\r\n    'ﬄ': 'ffl',\r\n    'ﬁ': 'fi',\r\n    'ﬂ': 'fl',\r\n    'ĳ': 'ij',\r\n    'œ': 'oe',\r\n    'ﬆ': 'st',\r\n    'ₐ': 'a',\r\n    'ₑ': 'e',\r\n    'ᵢ': 'i',\r\n    'ⱼ': 'j',\r\n    'ₒ': 'o',\r\n    'ᵣ': 'r',\r\n    'ᵤ': 'u',\r\n    'ᵥ': 'v',\r\n    'ₓ': 'x',\r\n  };\r\n\r\n  transform(input: string, chars?: string): string;\r\n  transform(input: any, chars?: string): any;\r\n\r\n  transform(text: any, chars: string = '\\\\s'): string {\r\n    return isString(text)\r\n      ? text.replace(/[^A-Za-z0-9]/g, (key: string) => {\r\n          return this.latinMap[key] || key;\r\n        })\r\n      : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'lines' })\r\nexport class LinesPipe implements PipeTransform {\r\n  transform(text: any, chars: string = '\\\\s'): Array<string> | any {\r\n    return isString(text) ? text.replace(/\\r\\n/g, '\\n').split('\\n') : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'underscore' })\r\nexport class UnderscorePipe implements PipeTransform {\r\n  transform(input: string, chars?: string): string;\r\n  transform(input: any, chars?: string): any;\r\n\r\n  transform(text: any, chars: string = '\\\\s'): string {\r\n    return isString(text)\r\n      ? text\r\n          .trim()\r\n          .replace(/\\s+/g, '')\r\n          .replace(/[A-Z]/g, (c: string, k: any) => {\r\n            return k ? `_${c.toLowerCase()}` : c.toLowerCase();\r\n          })\r\n      : text;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'match' })\r\nexport class MatchPipe implements PipeTransform {\r\n  transform(text: string, pattern: string, flags?: string): RegExpMatchArray | null;\r\n  transform<T>(text: T, pattern: string, flags?: string): T;\r\n\r\n  transform(text: any, pattern: string, flags?: string): any {\r\n    if (!isString(text)) {\r\n      return text;\r\n    }\r\n\r\n    return text.match(new RegExp(pattern, flags));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'test' })\r\nexport class TestPipe implements PipeTransform {\r\n  transform(text: string, pattern: string, flags?: string): boolean;\r\n  transform<T>(text: T, pattern: string, flags?: string): T;\r\n\r\n  transform(text: any, pattern: string, flags?: string): any {\r\n    if (!isString(text)) {\r\n      return text;\r\n    }\r\n\r\n    return new RegExp(pattern, flags).test(text);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'lpad' })\r\nexport class LeftPadPipe implements PipeTransform {\r\n  transform(str: string, length: number, padCharacter: string = ' '): string {\r\n    if (!isString(str) || str.length >= length) {\r\n      return str;\r\n    }\r\n    while (str.length < length) {\r\n      str = padCharacter + str;\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'rpad' })\r\nexport class RightPadPipe implements PipeTransform {\r\n  transform(str: string, length: number = 1, padCharacter: string = ' '): string {\r\n    if (!isString(str) || str.length >= length) {\r\n      return str;\r\n    }\r\n    while (str.length < length) {\r\n      str = str + padCharacter;\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isVowel } from '../helpers/helpers';\r\n\r\n@Pipe({\r\n  name: 'makePluralString',\r\n})\r\n\r\n/**\r\n * Takes a singular entity string and pluralizes it.\r\n * Uses both naive and holdout-list approaches.\r\n * If several words appear in the string, only the last word is pluralized -- this\r\n * means that if \"your story\" was passed in, \"your stories\" would be passed out.\r\n *\r\n * @param {string} singularEntity - Entity to pluralize. Pass as a singular ('story' or 'house').\r\n *          NOTE: The last word is examined. So you can pass in e.g. 'my story'.\r\n * @param {number} [quantity=0] quantity - How many of the entity are there? If left blank, this will\r\n *          pluralize the string (e.g. 'story' -> 'stories', 'house' -> 'houses'). If given a value,\r\n *          this will pluralize appropriately (e.g. ('story', 1) -> 'story', ('story', 2) -> 'stories').\r\n */\r\nexport class MakePluralStringPipe implements PipeTransform {\r\n  private irregularMap: any = {\r\n    addendum: 'addenda',\r\n    alga: 'algae',\r\n    alumna: 'alumnae',\r\n    alumnus: 'alumni',\r\n    analysis: 'analyses',\r\n    antenna: 'antennae',\r\n    appendix: 'appendices',\r\n    aquarium: 'aquaria',\r\n    arch: 'arches',\r\n    axe: 'axes',\r\n    axis: 'axes',\r\n    bacillus: 'bacilli',\r\n    bacterium: 'bacteria',\r\n    basis: 'bases',\r\n    batch: 'batches',\r\n    beach: 'beaches',\r\n    beau: 'beaux',\r\n    bison: 'bison',\r\n    brush: 'brushes',\r\n    buffalo: 'buffaloes',\r\n    bureau: 'bureaus',\r\n    bus: 'busses',\r\n    cactus: 'cacti',\r\n    calf: 'calves',\r\n    chateau: 'chateaux',\r\n    cherry: 'cherries',\r\n    child: 'children',\r\n    church: 'churches',\r\n    circus: 'circuses',\r\n    cod: 'cod',\r\n    corps: 'corps',\r\n    corpus: 'corpora',\r\n    crisis: 'crises',\r\n    criterion: 'criteria',\r\n    curriculum: 'curricula',\r\n    datum: 'data',\r\n    deer: 'deer',\r\n    diagnosis: 'diagnoses',\r\n    die: 'dice',\r\n    domino: 'dominoes',\r\n    dwarf: 'dwarves',\r\n    echo: 'echoes',\r\n    elf: 'elves',\r\n    ellipsis: 'ellipses',\r\n    embargo: 'embargoes',\r\n    emphasis: 'emphases',\r\n    erratum: 'errata',\r\n    fax: 'faxes',\r\n    fireman: 'firemen',\r\n    fish: 'fish',\r\n    flush: 'flushes',\r\n    focus: 'foci',\r\n    foot: 'feet',\r\n    formula: 'formulas',\r\n    fungus: 'fungi',\r\n    genus: 'genera',\r\n    goose: 'geese',\r\n    grafito: 'grafiti',\r\n    half: 'halves',\r\n    hero: 'heroes',\r\n    hoax: 'hoaxes',\r\n    hoof: 'hooves',\r\n    hypothesis: 'hypotheses',\r\n    index: 'indices',\r\n    kiss: 'kisses',\r\n    knife: 'knives',\r\n    leaf: 'leaves',\r\n    life: 'lives',\r\n    loaf: 'loaves',\r\n    louse: 'lice',\r\n    man: 'men',\r\n    mango: 'mangoes',\r\n    matrix: 'matrices',\r\n    means: 'means',\r\n    medium: 'media',\r\n    memorandum: 'memoranda',\r\n    millennium: 'milennia',\r\n    moose: 'moose',\r\n    mosquito: 'mosquitoes',\r\n    motto: 'mottoes',\r\n    mouse: 'mice',\r\n    nebula: 'nebulae',\r\n    neurosis: 'neuroses',\r\n    nucleus: 'nuclei',\r\n    oasis: 'oases',\r\n    octopus: 'octopodes',\r\n    ovum: 'ova',\r\n    ox: 'oxen',\r\n    paralysis: 'paralyses',\r\n    parenthesis: 'parentheses',\r\n    person: 'people',\r\n    phenomenon: 'phenomena',\r\n    plateau: 'plateaux',\r\n    potato: 'potatoes',\r\n    quiz: 'quizzes',\r\n    radius: 'radii',\r\n    reflex: 'reflexes',\r\n    'runner-up': 'runners-up',\r\n    scampo: 'scampi',\r\n    scarf: 'scarves',\r\n    scissors: 'scissors',\r\n    scratch: 'scratches',\r\n    self: 'selves',\r\n    series: 'series',\r\n    sheaf: 'sheaves',\r\n    sheep: 'sheep',\r\n    shelf: 'shelves',\r\n    'son-in-law': 'sons-in-law',\r\n    species: 'species',\r\n    splash: 'splashes',\r\n    stimulus: 'stimuli',\r\n    stitch: 'stitches',\r\n    stratum: 'strata',\r\n    syllabus: 'syllabi',\r\n    symposium: 'symposia',\r\n    synopsis: 'synopses',\r\n    synthesis: 'syntheses',\r\n    tableau: 'tableaux',\r\n    tax: 'taxes',\r\n    that: 'those',\r\n    thesis: 'theses',\r\n    thief: 'thieves',\r\n    this: 'these',\r\n    tomato: 'tomatoes',\r\n    tooth: 'teeth',\r\n    tornado: 'tornadoes',\r\n    torpedo: 'torpedoes',\r\n    vertebra: 'vertebrae',\r\n    veto: 'vetoes',\r\n    vita: 'vitae',\r\n    volcano: 'volcanoes',\r\n    waltz: 'waltzes',\r\n    wash: 'washes',\r\n    watch: 'watches',\r\n    wharf: 'wharves',\r\n    wife: 'wives',\r\n    wolf: 'wolves',\r\n    woman: 'women',\r\n    zero: 'zeroes',\r\n  };\r\n\r\n  transform(singularEntity: string, quantity: number = 0): string {\r\n    if (!singularEntity || singularEntity === '') {\r\n      return '';\r\n    }\r\n\r\n    if (quantity === 1) {\r\n      return singularEntity;\r\n    } else {\r\n      const lastWord = singularEntity.trim().split(' ')[singularEntity.trim().split(' ').length - 1];\r\n      if (this.irregularMap[lastWord.toLocaleLowerCase()]) {\r\n        if (lastWord[0] === lastWord[0].toLocaleUpperCase()) {\r\n          return singularEntity.replace(\r\n            lastWord,\r\n            this.irregularMap[lastWord.toLocaleLowerCase()].replace(\r\n              this.irregularMap[lastWord.toLocaleLowerCase()][0],\r\n              this.irregularMap[lastWord.toLocaleLowerCase()][0].toLocaleUpperCase()\r\n            )\r\n          );\r\n        }\r\n\r\n        return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()]);\r\n      } else if (lastWord[lastWord.length - 1] === 'y') {\r\n        // Naive approach:\r\n        // consonant+y = word - 'y' +'ies'\r\n        // vowel+y = word + 's'\r\n\r\n        return isVowel(lastWord[lastWord.length - 2])\r\n          ? singularEntity + 's'\r\n          : singularEntity.replace(lastWord, lastWord.slice(0, -1) + 'ies');\r\n      } else if (lastWord[lastWord.length - 1] === 's') {\r\n        return singularEntity + 'es';\r\n      } else {\r\n        return singularEntity + 's';\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'wrap' })\r\nexport class WrapPipe implements PipeTransform {\r\n  transform(str: string, prefix: string = '', suffix: string = ''): string {\r\n    if (!isString(str)) {\r\n      return str;\r\n    }\r\n\r\n    return (!!prefix && isString(prefix) ? prefix : '') + str + (!!suffix && isString(suffix) ? suffix : '');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AorAnPipe } from './a-or-an';\r\nimport { UcWordsPipe } from './ucwords';\r\nimport { LeftTrimPipe } from './ltrim';\r\nimport { RepeatPipe } from './repeat';\r\nimport { RightTrimPipe } from './rtrim';\r\nimport { ScanPipe } from './scan';\r\nimport { ShortenPipe } from './shorten';\r\nimport { StripTagsPipe } from './strip-tags';\r\nimport { TrimPipe } from './trim';\r\nimport { UcFirstPipe } from './ucfirst';\r\nimport { SlugifyPipe } from './slugify';\r\nimport { CamelizePipe } from './camelize';\r\nimport { LatinisePipe } from './latinise';\r\nimport { LinesPipe } from './lines';\r\nimport { UnderscorePipe } from './underscore';\r\nimport { MatchPipe } from './match';\r\nimport { TestPipe } from './test';\r\nimport { LeftPadPipe } from './lpad';\r\nimport { RightPadPipe } from './rpad';\r\nimport { MakePluralStringPipe } from './pluralize';\r\nimport { WrapPipe } from './wrap';\r\n\r\nexport const STRING_PIPES = [\r\n  AorAnPipe,\r\n  LeftTrimPipe,\r\n  RepeatPipe,\r\n  RightTrimPipe,\r\n  ScanPipe,\r\n  ShortenPipe,\r\n  StripTagsPipe,\r\n  TrimPipe,\r\n  UcFirstPipe,\r\n  UcWordsPipe,\r\n  SlugifyPipe,\r\n  CamelizePipe,\r\n  LatinisePipe,\r\n  LinesPipe,\r\n  UnderscorePipe,\r\n  MatchPipe,\r\n  TestPipe,\r\n  LeftPadPipe,\r\n  RightPadPipe,\r\n  MakePluralStringPipe,\r\n  WrapPipe,\r\n];\r\n\r\n@NgModule({\r\n  declarations: STRING_PIPES,\r\n  imports: [],\r\n  exports: STRING_PIPES,\r\n})\r\nexport class NgStringPipesModule {}\r\n\r\nexport { AorAnPipe } from './a-or-an';\r\nexport { UcWordsPipe } from './ucwords';\r\nexport { LeftTrimPipe } from './ltrim';\r\nexport { RepeatPipe } from './repeat';\r\nexport { RightTrimPipe } from './rtrim';\r\nexport { ScanPipe } from './scan';\r\nexport { ShortenPipe } from './shorten';\r\nexport { StripTagsPipe } from './strip-tags';\r\nexport { TrimPipe } from './trim';\r\nexport { UcFirstPipe } from './ucfirst';\r\nexport { SlugifyPipe } from './slugify';\r\nexport { CamelizePipe } from './camelize';\r\nexport { LatinisePipe } from './latinise';\r\nexport { LinesPipe } from './lines';\r\nexport { UnderscorePipe } from './underscore';\r\nexport { MatchPipe } from './match';\r\nexport { TestPipe } from './test';\r\nexport { LeftPadPipe } from './lpad';\r\nexport { RightPadPipe } from './rpad';\r\nexport { MakePluralStringPipe } from './pluralize';\r\nexport { WrapPipe } from './wrap';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'max' })\r\nexport class MaxPipe implements PipeTransform {\r\n  transform(arr: any): number | number[] {\r\n    return Array.isArray(arr) ? Math.max(...arr) : arr;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'min' })\r\nexport class MinPipe implements PipeTransform {\r\n  transform(arr: any): number | number[] {\r\n    return Array.isArray(arr) ? Math.min(...arr) : arr;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'percentage' })\r\nexport class PercentagePipe implements PipeTransform {\r\n  transform(num: number, total?: number, floor?: boolean): number;\r\n  transform<T>(num: T, total?: number, floor?: boolean): T;\r\n\r\n  transform(num: any, total: number = 100, floor: boolean = false): any {\r\n    if (isNaN(num)) {\r\n      return num;\r\n    }\r\n\r\n    const percent = (num * 100) / total;\r\n\r\n    return floor ? Math.floor(percent) : percent;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'sum' })\r\nexport class SumPipe implements PipeTransform {\r\n  transform(num: any[]): number;\r\n  transform<T>(num: any): T;\r\n\r\n  transform(arr: any): any {\r\n    return Array.isArray(arr) ? arr.reduce((sum, curr) => sum + curr, 0) : arr;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'floor' })\r\nexport class FloorPipe implements PipeTransform {\r\n  transform(num: number, precision: number = 0): number {\r\n    if (precision <= 0) {\r\n      return Math.floor(num);\r\n    }\r\n\r\n    const tho = 10 ** precision;\r\n\r\n    return Math.floor(num * tho) / tho;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { applyPrecision } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'round' })\r\nexport class RoundPipe implements PipeTransform {\r\n  transform(num: number, precision: number = 0): number {\r\n    return applyPrecision(num, precision);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'sqrt' })\r\nexport class SqrtPipe implements PipeTransform {\r\n  transform(num: number): number;\r\n  transform<T>(num: T): T;\r\n\r\n  transform(num: any): any {\r\n    return !isNaN(num) ? Math.sqrt(num) : num;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'pow' })\r\nexport class PowerPipe implements PipeTransform {\r\n  transform(num: number, power?: number): number;\r\n  transform(num: any, power?: number): any;\r\n\r\n  transform(num: any, power: number = 2): number {\r\n    return !isNaN(num) ? num ** power : num;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ceil' })\r\nexport class CeilPipe implements PipeTransform {\r\n  transform(num: number, precision: number = 0): number {\r\n    if (precision <= 0) {\r\n      return Math.ceil(num);\r\n    }\r\n\r\n    const tho = 10 ** precision;\r\n\r\n    return Math.ceil(num * tho) / tho;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isNumberFinite } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'degrees' })\r\nexport class DegreesPipe implements PipeTransform {\r\n  transform(radians: number): number {\r\n    if (!isNumberFinite(radians)) {\r\n      return NaN;\r\n    }\r\n\r\n    return (radians * 180) / Math.PI;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'bytes' })\r\nexport class BytesPipe implements PipeTransform {\r\n  private dictionary: Array<{ max: number; type: string }> = [\r\n    { max: 1024, type: 'B' },\r\n    { max: 1048576, type: 'KB' },\r\n    { max: 1073741824, type: 'MB' },\r\n    { max: 1.0995116e12, type: 'GB' },\r\n  ];\r\n\r\n  transform(value: number, precision?: number | undefined): string | number {\r\n    if (!isNumberFinite(value)) {\r\n      return NaN;\r\n    }\r\n\r\n    const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];\r\n    const calc = value / (format.max / 1024);\r\n    const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);\r\n\r\n    return `${num} ${format.type}`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isNumberFinite } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'radians' })\r\nexport class RadiansPipe implements PipeTransform {\r\n  transform(degrees: number): number {\r\n    if (!isNumberFinite(degrees)) {\r\n      return NaN;\r\n    }\r\n\r\n    return (degrees * Math.PI) / 180;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MaxPipe } from './max';\r\nimport { MinPipe } from './min';\r\nimport { PercentagePipe } from './percentage';\r\nimport { SumPipe } from './sum';\r\nimport { FloorPipe } from './floor';\r\nimport { RoundPipe } from './round';\r\nimport { SqrtPipe } from './sqrt';\r\nimport { PowerPipe } from './pow';\r\nimport { CeilPipe } from './ceil';\r\nimport { DegreesPipe } from './degrees';\r\nimport { BytesPipe } from './bytes';\r\nimport { RadiansPipe } from './radians';\r\n\r\nexport const MATH_PIPES = [\r\n  MaxPipe,\r\n  MinPipe,\r\n  PercentagePipe,\r\n  SumPipe,\r\n  FloorPipe,\r\n  RoundPipe,\r\n  SqrtPipe,\r\n  PowerPipe,\r\n  CeilPipe,\r\n  DegreesPipe,\r\n  BytesPipe,\r\n  RadiansPipe,\r\n];\r\n\r\n@NgModule({\r\n  declarations: MATH_PIPES,\r\n  imports: [],\r\n  exports: MATH_PIPES,\r\n})\r\nexport class NgMathPipesModule {}\r\n\r\nexport { MaxPipe } from './max';\r\nexport { MinPipe } from './min';\r\nexport { PercentagePipe } from './percentage';\r\nexport { SumPipe } from './sum';\r\nexport { FloorPipe } from './floor';\r\nexport { RoundPipe } from './round';\r\nexport { SqrtPipe } from './sqrt';\r\nexport { PowerPipe } from './pow';\r\nexport { CeilPipe } from './ceil';\r\nexport { DegreesPipe } from './degrees';\r\nexport { BytesPipe } from './bytes';\r\nexport { RadiansPipe } from './radians';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isDefined' })\r\nexport class IsDefinedPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return !isUndefined(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isNull' })\r\nexport class IsNullPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return input === null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isUndefined } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isUndefined' })\r\nexport class IsUndefinedPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return isUndefined(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isString } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isString' })\r\nexport class IsStringPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return isString(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isFunction } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isFunction' })\r\nexport class IsFunctionPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return isFunction(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isNumber } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isNumber' })\r\nexport class IsNumberPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return isNumber(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isArray' })\r\nexport class IsArrayPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return Array.isArray(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isObject } from '../helpers/helpers';\r\n\r\n@Pipe({ name: 'isObject' })\r\nexport class IsObjectPipe implements PipeTransform {\r\n  transform(input: any): boolean {\r\n    return isObject(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isGreaterEqualThan' })\r\nexport class IsGreaterEqualThanPipe implements PipeTransform {\r\n  transform(input: number, other: number): boolean {\r\n    return input >= other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isGreaterThan' })\r\nexport class IsGreaterThanPipe implements PipeTransform {\r\n  transform(input: number, other: number): boolean {\r\n    return input > other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isLessEqualThan' })\r\nexport class IsLessEqualThanPipe implements PipeTransform {\r\n  transform(input: number, other: number): boolean {\r\n    return input <= other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isEqualTo' })\r\nexport class IsEqualToPipe implements PipeTransform {\r\n  transform(input: any, other: any): boolean {\r\n    // tslint:disable-next-line:triple-equals\r\n    return input == other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isNotEqualTo' })\r\nexport class IsNotEqualToPipe implements PipeTransform {\r\n  transform(input: any, other: any): boolean {\r\n    // tslint:disable-next-line:triple-equals\r\n    return input != other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isIdenticalTo' })\r\nexport class IsIdenticalToPipe implements PipeTransform {\r\n  transform(input: any, other: any): boolean {\r\n    return input === other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isNotIdenticalTo' })\r\nexport class IsNotIdenticalToPipe implements PipeTransform {\r\n  transform(input: any, other: any): boolean {\r\n    return input !== other;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isLessThan' })\r\nexport class IsLessThanPipe implements PipeTransform {\r\n  transform(input: number, other: number): boolean {\r\n    return input < other;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { IsDefinedPipe } from './is-defined';\r\nimport { IsNullPipe } from './is-null';\r\nimport { IsUndefinedPipe } from './is-undefined';\r\nimport { IsStringPipe } from './is-string';\r\nimport { IsFunctionPipe } from './is-function';\r\nimport { IsNumberPipe } from './is-number';\r\nimport { IsArrayPipe } from './is-array';\r\nimport { IsObjectPipe } from './is-object';\r\nimport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\r\nimport { IsGreaterThanPipe } from './is-greater-than';\r\nimport { IsLessEqualThanPipe } from './is-less-equal-than';\r\nimport { IsEqualToPipe } from './is-equal-to';\r\nimport { IsNotEqualToPipe } from './is-not-equal-to';\r\nimport { IsIdenticalToPipe } from './is-identical-to';\r\nimport { IsNotIdenticalToPipe } from './is-not-identical-to';\r\nimport { IsLessThanPipe } from './is-less-than';\r\n\r\nexport const BOOLEAN_PIPES = [\r\n  IsDefinedPipe,\r\n  IsNullPipe,\r\n  IsUndefinedPipe,\r\n  IsStringPipe,\r\n  IsFunctionPipe,\r\n  IsNumberPipe,\r\n  IsArrayPipe,\r\n  IsObjectPipe,\r\n  IsGreaterEqualThanPipe,\r\n  IsGreaterThanPipe,\r\n  IsLessEqualThanPipe,\r\n  IsLessEqualThanPipe,\r\n  IsEqualToPipe,\r\n  IsNotEqualToPipe,\r\n  IsIdenticalToPipe,\r\n  IsNotIdenticalToPipe,\r\n  IsLessThanPipe,\r\n];\r\n\r\n@NgModule({\r\n  declarations: BOOLEAN_PIPES,\r\n  imports: [],\r\n  exports: BOOLEAN_PIPES,\r\n})\r\nexport class NgBooleanPipesModule {}\r\n\r\nexport { IsDefinedPipe } from './is-defined';\r\nexport { IsNullPipe } from './is-null';\r\nexport { IsUndefinedPipe } from './is-undefined';\r\nexport { IsStringPipe } from './is-string';\r\nexport { IsFunctionPipe } from './is-function';\r\nexport { IsNumberPipe } from './is-number';\r\nexport { IsArrayPipe } from './is-array';\r\nexport { IsObjectPipe } from './is-object';\r\nexport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\r\nexport { IsGreaterThanPipe } from './is-greater-than';\r\nexport { IsLessEqualThanPipe } from './is-less-equal-than';\r\nexport { IsEqualToPipe } from './is-equal-to';\r\nexport { IsNotEqualToPipe } from './is-not-equal-to';\r\nexport { IsIdenticalToPipe } from './is-identical-to';\r\nexport { IsNotIdenticalToPipe } from './is-not-identical-to';\r\nexport { IsLessThanPipe } from './is-less-than';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'timeAgo' })\r\nexport class TimeAgoPipe implements PipeTransform {\r\n  private static YEAR_MS: number = 1000 * 60 * 60 * 24 * 7 * 4 * 12;\r\n  private static MAPPER: any = [\r\n    { single: 'last year', many: 'years', div: 1 },\r\n    { single: 'last month', many: 'months', div: 12 },\r\n    { single: 'last week', many: 'weeks', div: 4 },\r\n    { single: 'yesterday', many: 'days', div: 7 },\r\n    { single: 'an hour ago', many: 'hours', div: 24 },\r\n    { single: 'just now', many: 'minutes', div: 60 },\r\n  ];\r\n\r\n  /**\r\n   * @param inputDate: Date | Moment - not included as TypeScript interface,\r\n   * in order to keep `ngx-pipes` \"pure\" from dependencies!\r\n   */\r\n  public transform(inputDate: any): string {\r\n    if (!inputDate || (!inputDate.getTime && !inputDate.toDate)) {\r\n      return 'Invalid date';\r\n    }\r\n\r\n    const past = inputDate.toDate ? inputDate.toDate() : inputDate.getTime();\r\n    const now = +new Date();\r\n\r\n    if (past > now) {\r\n      return 'in the future';\r\n    }\r\n\r\n    for (let i = 0, l = TimeAgoPipe.MAPPER.length, ms = now - past, div = TimeAgoPipe.YEAR_MS; i < l; ++i) {\r\n      const elm = TimeAgoPipe.MAPPER[i];\r\n      const unit = Math.floor(ms / (div /= elm.div));\r\n\r\n      if (unit >= 1) {\r\n        return unit === 1 ? elm.single : `${unit} ${elm.many} ago`;\r\n      }\r\n    }\r\n\r\n    return 'just now';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TimeAgoPipe } from './time-ago';\r\n\r\nexport const DATE_PIPES = [TimeAgoPipe];\r\n\r\n@NgModule({\r\n  declarations: DATE_PIPES,\r\n  imports: [],\r\n  exports: DATE_PIPES,\r\n})\r\nexport class NgDatePipesModule {}\r\n\r\nexport { TimeAgoPipe } from './time-ago';\r\n","import { NgModule } from '@angular/core';\r\nimport { NgArrayPipesModule } from './pipes/array/index';\r\nimport { NgObjectPipesModule } from './pipes/object/index';\r\nimport { NgStringPipesModule } from './pipes/string/index';\r\nimport { NgMathPipesModule } from './pipes/math/index';\r\nimport { NgBooleanPipesModule } from './pipes/boolean/index';\r\nimport { NgDatePipesModule } from './pipes/date/index';\r\n\r\n@NgModule({\r\n  exports: [\r\n    NgArrayPipesModule,\r\n    NgStringPipesModule,\r\n    NgMathPipesModule,\r\n    NgBooleanPipesModule,\r\n    NgObjectPipesModule,\r\n    NgDatePipesModule,\r\n  ],\r\n})\r\nexport class NgPipesModule {}\r\n\r\nexport * from './pipes/array/index';\r\nexport * from './pipes/object/index';\r\nexport * from './pipes/string/index';\r\nexport * from './pipes/math/index';\r\nexport * from './pipes/boolean/index';\r\nexport * from './pipes/date/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {isString as ɵa} from './src/ng-pipes/pipes/helpers/helpers';"],"names":[],"mappings":"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"}